name: Web Vitals Performance Monitoring

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      url:
        description: 'Custom URL to monitor'
        required: false
        default: ''
  schedule:
    # Run every 6 hours to maintain continuous monitoring
    - cron: '0 */6 * * *'

env:
  GOOGLE_PSI_API_KEY: ${{ secrets.GOOGLE_PSI_API_KEY }}
  PRODUCTION_URL: ${{ vars.PRODUCTION_URL || 'https://www.contentstack.com/' }}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  PERFORMANCE_THRESHOLD_LCP: ${{ vars.PERFORMANCE_THRESHOLD_LCP || '2.5' }}
  PERFORMANCE_THRESHOLD_CLS: ${{ vars.PERFORMANCE_THRESHOLD_CLS || '0.1' }}
  PERFORMANCE_THRESHOLD_INP: ${{ vars.PERFORMANCE_THRESHOLD_INP || '200' }}

jobs:
  web-vitals-check:
    runs-on: ubuntu-latest
    name: Monitor Web Vitals Performance
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Setup dependencies
      run: |
        chmod +x .github/scripts/setup-dependencies.sh
        .github/scripts/setup-dependencies.sh
        
    - name: Wait for deployment (on push to main)
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        echo "Waiting 60 seconds for deployment to complete..."
        sleep 60
        
    - name: Run Web Vitals monitoring
      id: monitoring
      run: |
        node .github/scripts/web-vitals-monitor.js
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_EVENT_NAME: ${{ github.event_name }}
        GITHUB_SHA: ${{ github.sha }}
        GITHUB_REF: ${{ github.ref }}
        PR_NUMBER: ${{ github.event.number }}
        
    - name: Upload performance artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: web-vitals-report-${{ github.sha }}
        path: |
          performance-report.json
          lighthouse-report.html
          web-vitals-history.json
        retention-days: 30
        
    - name: Comment PR with performance results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          // Read performance report
          let reportContent = '## üöÄ Web Vitals Performance Report\n\n';
          
          try {
            const report = JSON.parse(fs.readFileSync('performance-report.json', 'utf8'));
            
            reportContent += `### Performance Summary\n`;
            reportContent += `- **Performance Score**: ${report.performance}/100\n`;
            reportContent += `- **LCP**: ${report.lcp}s ${report.lcp <= 2.5 ? '‚úÖ' : report.lcp <= 4.0 ? '‚ö†Ô∏è' : '‚ùå'}\n`;
            reportContent += `- **CLS**: ${report.cls} ${report.cls <= 0.1 ? '‚úÖ' : report.cls <= 0.25 ? '‚ö†Ô∏è' : '‚ùå'}\n`;
            reportContent += `- **INP**: ${report.inp}ms ${report.inp <= 200 ? '‚úÖ' : report.inp <= 500 ? '‚ö†Ô∏è' : '‚ùå'}\n\n`;
            
            if (report.regression && report.regression.length > 0) {
              reportContent += `### ‚ö†Ô∏è Performance Regressions Detected\n`;
              report.regression.forEach(issue => {
                reportContent += `- **${issue.metric}**: ${issue.change} (${issue.impact})\n`;
              });
              reportContent += '\n';
            }
            
            if (report.improvements && report.improvements.length > 0) {
              reportContent += `### üéâ Performance Improvements\n`;
              report.improvements.forEach(improvement => {
                reportContent += `- **${improvement.metric}**: ${improvement.change} (${improvement.impact})\n`;
              });
              reportContent += '\n';
            }
            
            reportContent += `### üìä Detailed Report\n`;
            reportContent += `- **Accessibility**: ${report.accessibility}/100\n`;
            reportContent += `- **Best Practices**: ${report.bestPractices}/100\n`;
            reportContent += `- **SEO**: ${report.seo}/100\n\n`;
            
            reportContent += `[View Lighthouse Report](${report.lighthouseUrl})\n\n`;
            reportContent += `*Report generated on: ${new Date().toISOString()}*`;
            
          } catch (error) {
            reportContent += '‚ùå Failed to generate performance report. Check the workflow logs for details.';
          }
          
          // Find existing comment to update
          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
          });
          
          const botComment = comments.find(comment => 
            comment.user.type === 'Bot' && 
            comment.body.includes('üöÄ Web Vitals Performance Report')
          );
          
          if (botComment) {
            // Update existing comment
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: botComment.id,
              body: reportContent
            });
          } else {
            // Create new comment
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: reportContent
            });
          }
          
    - name: Fail on performance regression
      if: github.event_name == 'pull_request'
      run: |
        if [ -f "performance-regression.flag" ]; then
          echo "‚ùå Performance regression detected! Check the report above."
          exit 1
        fi
        
    - name: Send Slack notification on regression
      if: failure() && env.SLACK_WEBHOOK_URL != ''
      uses: 8398a7/action-slack@v3
      with:
        status: failure
        channel: '#performance'
        text: |
          üö® Performance regression detected in ${{ github.repository }}
          
          Branch: ${{ github.ref }}
          Commit: ${{ github.sha }}
          
          Check the GitHub Actions logs for details.
        webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}

  lighthouse-ci:
    runs-on: ubuntu-latest
    name: Lighthouse CI Analysis
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Setup dependencies
      run: |
        chmod +x .github/scripts/setup-dependencies.sh
        .github/scripts/setup-dependencies.sh
      
    - name: Run Lighthouse CI
      run: |
        lhci autorun
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        LHCI_TOKEN: ${{ secrets.LHCI_TOKEN }}
        
    - name: Upload Lighthouse reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lighthouse-reports-${{ github.sha }}
        path: .lighthouseci/
        retention-days: 30
